import numpy as np
from scipy.stats import norm



def bsformula(callput, S0, K, r, T, sigma, q=0):
    '''
    callput: 1 for call, -1 for put
    S0:      Spot price
    K:       Strike price
    r:       Interest rate
    T:       Time to maturity
    sigma:   Volatility
    q:       Continous return rate on the underlying
    '''
    d1 = (np.log(S0 / K) + (r - q + 0.5 * sigma ** 2) * T)/(sigma * np.sqrt(T))
    d2 = (d1 - sigma * np.sqrt(T))
    
    Call_price = S0 * norm.cdf(d1, 0, 1) - K * np.exp(-r * T) * norm.cdf(d2, 0, 1)
    Put_price = Call_price + K * np.exp(-r*T) - S0
    #vega = S0 * norm.pdf(d1, 0, 1) * np.sqrt(T)
    vega = 1 / np.sqrt(2 * np.pi) * S0 * np.exp(-q * T) * np.exp(-(d1 ** 2) * 0.5) * np.sqrt(T)
    
    if callput == 1:
        return Call_price, norm.cdf(d1, 0, 1), vega
    
    elif callput == -1:
        return Put_price, norm.cdf(d1, 0, 1)-1, vega
  
    else:
        print('Error')


if __name__ == '__main__':
    print(bsformula(1, 100, 100, 1.74/100, 1, .2))
    print(bsformula(-1, 25, 30, 0.05, 2.5, .2))
